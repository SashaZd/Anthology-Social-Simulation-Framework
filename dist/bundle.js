(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hobby_action = exports.work_action = exports.movie_friend_action = exports.eat_friend_action = exports.movie_action = exports.eat_action = void 0;
exports.eat_action = {
    name: "eat_action",
    requirements: [{ type: 0, op: 0, value: "restaurant" }],
    effects: [{ motive: 0, delta: 2 }],
    time_min: 60
};
exports.movie_action = {
    name: "movie_action",
    requirements: [{ type: 0, op: 0, value: "moive theatre" }],
    effects: [{ motive: 1, delta: 3 }],
    time_min: 120
};
exports.eat_friend_action = {
    name: "eat_friend_action",
    requirements: [{ type: 0, op: 0, value: "restaurant" }, { type: 1, op: 3, value: 1 }],
    effects: [{ motive: 0, delta: 2 }, { motive: 2, delta: 2 }],
    time_min: 70
};
exports.movie_friend_action = {
    name: "movie_friend_action",
    requirements: [{ type: 0, op: 0, value: "moive theatre" }, { type: 1, op: 3, value: 1 }],
    effects: [{ motive: 1, delta: 3 }, { motive: 2, delta: 2 }],
    time_min: 130
};
exports.work_action = {
    name: "work_action",
    requirements: [{ type: 0, op: 0, value: "moive theatre" }],
    effects: [{ motive: 3, delta: 1 }],
    time_min: 240
};
exports.hobby_action = {
    name: "hobby_action",
    requirements: [{ type: 0, op: 0, value: "home" }],
    effects: [{ motive: 4, delta: 2 }],
    time_min: 60
};

},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.run_sim = exports.execute_action = exports.select_action = exports.clamp = exports.ReqType = exports.BinOp = exports.Motive = void 0;
var Motive;
(function (Motive) {
    Motive[Motive["physical"] = 0] = "physical";
    Motive[Motive["emotional"] = 1] = "emotional";
    Motive[Motive["social"] = 2] = "social";
    Motive[Motive["financial"] = 3] = "financial";
    Motive[Motive["accomplishment"] = 4] = "accomplishment";
})(Motive = exports.Motive || (exports.Motive = {}));
var BinOp;
(function (BinOp) {
    BinOp[BinOp["equals"] = 0] = "equals";
    BinOp[BinOp["greater_than"] = 1] = "greater_than";
    BinOp[BinOp["less_than"] = 2] = "less_than";
    BinOp[BinOp["geq"] = 3] = "geq";
    BinOp[BinOp["leq"] = 4] = "leq";
})(BinOp = exports.BinOp || (exports.BinOp = {}));
var ReqType;
(function (ReqType) {
    ReqType[ReqType["location"] = 0] = "location";
    ReqType[ReqType["people"] = 1] = "people";
    ReqType[ReqType["motive"] = 2] = "motive";
})(ReqType = exports.ReqType || (exports.ReqType = {}));
var time = 0;
function clamp(n, m, o) {
    if (n > m) {
        return m;
    }
    else if (n < o) {
        return o;
    }
    else {
        return n;
    }
}
exports.clamp = clamp;
function select_action(a, n) {
    var mdu = -26;
    var r = n[0];
    var i = 0;
    for (i = 0; i < n.length; i++) {
        var du = 0;
        var j = 0;
        for (j = 0; j < n[i].effects.length; j++) {
            switch (n[i].effects[j].motive) {
                case 0: {
                    du += clamp(n[i].effects[j].delta + a.physical, 5, 1) - a.physical;
                    break;
                }
                case 1: {
                    du += clamp(n[i].effects[j].delta + a.emotional, 5, 1) - a.emotional;
                    break;
                }
                case 2: {
                    du += clamp(n[i].effects[j].delta + a.social, 5, 1) - a.social;
                    break;
                }
                case 3: {
                    du += clamp(n[i].effects[j].delta + a.accomplishment, 5, 1) - a.accomplishment;
                    break;
                }
                case 4: {
                    du += clamp(n[i].effects[j].delta + a.financial, 5, 1) - a.financial;
                    break;
                }
                default: {
                    break;
                }
            }
        }
        du = du / n[i].time_min;
        if (du > mdu) {
            mdu = du;
            r = n[i];
        }
    }
    return r;
}
exports.select_action = select_action;
function execute_action(a, n) {
    console.log(a.name + ": " + n.name);
    var i = 0;
    for (i = 0; i < n.effects.length; i++) {
        switch (n.effects[i].motive) {
            case 0: {
                a.physical = clamp(a.physical + n.effects[i].delta, 5, 1);
                break;
            }
            case 1: {
                a.emotional = clamp(a.emotional + n.effects[i].delta, 5, 1);
                break;
            }
            case 2: {
                a.social = clamp(a.social + n.effects[i].delta, 5, 1);
                break;
            }
            case 3: {
                a.accomplishment = clamp(a.accomplishment + n.effects[i].delta, 5, 1);
                break;
            }
            case 4: {
                a.financial = clamp(a.financial + n.effects[i].delta, 5, 1);
                break;
            }
            default: {
                break;
            }
        }
    }
}
exports.execute_action = execute_action;
function run_sim(a, n, c) {
    while (c()) {
        console.log("time: " + time.toString());
        time += 1;
        var i = 0;
        for (i = 0; i < a.length; i++) {
            var choice = select_action(a[i], n);
            execute_action(a[i], choice);
        }
    }
    console.log("Finished.");
    // Sasha: Unsure if this is needed
    // return process.exit(0);
}
exports.run_sim = run_sim;

},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var engine = require("./execution_engine");
var actions = require("./action_specs");
var action_list = [actions.eat_action, actions.movie_action, actions.eat_friend_action, actions.movie_friend_action, actions.work_action, actions.hobby_action];
var a1 = {
    name: "John Doe",
    physical: 1,
    emotional: 1,
    social: 1,
    financial: 1,
    accomplishment: 1
};
var agent_list = [a1];
function condition() {
    var check = false;
    var i = 0;
    for (i = 0; i < agent_list.length; i++) {
        if (agent_list[i].physical < 5) {
            check = true;
            break;
        }
        if (agent_list[i].emotional < 5) {
            check = true;
            break;
        }
        if (agent_list[i].social < 5) {
            check = true;
            break;
        }
        if (agent_list[i].financial < 5) {
            check = true;
            break;
        }
        if (agent_list[i].accomplishment < 5) {
            check = true;
            break;
        }
    }
    return check;
}
engine.run_sim(agent_list, action_list, condition);
function showOnBrowser(divName, name) {
    var elt = document.getElementById(divName);
    elt.innerText = name + "Hello World!";
}
showOnBrowser("greeting", "TypeScript");

},{"./action_specs":1,"./execution_engine":2}]},{},[3])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
